{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\ecommerce-frontend_fixed\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const navigate = useNavigate();\n  const register = userData => {\n    try {\n      const existingUser = JSON.parse(localStorage.getItem('user'));\n      if (existingUser && existingUser.email === userData.email) {\n        toast.error('Email already registered');\n        return false;\n      }\n      const newUser = {\n        ...userData,\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString()\n      };\n      localStorage.setItem('user', JSON.stringify(newUser));\n      localStorage.setItem('token', btoa(JSON.stringify({\n        id: newUser.id,\n        email: newUser.email\n      })));\n      setUser(newUser);\n      setIsLoggedIn(true);\n      setToken(localStorage.getItem('token'));\n      localStorage.setItem('isLoggedIn', 'true');\n      toast.success('Registration successful!');\n      navigate('/');\n      return true;\n    } catch (error) {\n      toast.error('Registration failed');\n      return false;\n    }\n  };\n  const login = credentials => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser && storedUser.email === credentials.email && storedUser.password === credentials.password) {\n      setUser(storedUser);\n      setIsLoggedIn(true);\n      const newToken = btoa(JSON.stringify({\n        id: storedUser.id,\n        email: storedUser.email\n      }));\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      localStorage.setItem('isLoggedIn', 'true');\n      toast.success('Logged in successfully!');\n      navigate('/');\n      return true;\n    } else {\n      toast.error('Invalid email or password');\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setIsLoggedIn(false);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('isLoggedIn');\n    localStorage.removeItem('token');\n    toast.info('Logged out successfully');\n    navigate('/login');\n  };\n  const updateProfile = updatedData => {\n    try {\n      const currentUser = JSON.parse(localStorage.getItem('user'));\n      if (!currentUser) {\n        toast.error('No user found');\n        return false;\n      }\n      const updatedUser = {\n        ...currentUser,\n        ...updatedData,\n        updatedAt: new Date().toISOString()\n      };\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      toast.success('Profile updated successfully');\n      return true;\n    } catch (error) {\n      toast.error('Profile update failed');\n      return false;\n    }\n  };\n  const verifyToken = () => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken && token) {\n      try {\n        const decoded = JSON.parse(atob(storedToken));\n        return !!decoded.id && !!decoded.email;\n      } catch {\n        return false;\n      }\n    }\n    return false;\n  };\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    if (storedUser && storedToken && verifyToken()) {\n      setUser(JSON.parse(storedUser));\n      setIsLoggedIn(true);\n      setToken(storedToken);\n    } else {\n      setIsLoggedIn(false);\n      setToken(null);\n      localStorage.removeItem('token');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isLoggedIn,\n      token,\n      login,\n      logout,\n      register,\n      updateProfile,\n      verifyToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"7aaq7tOSthjf/VszZ9C2kac+Y0Q=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","JSON","parse","localStorage","getItem","isLoggedIn","setIsLoggedIn","token","setToken","navigate","register","userData","existingUser","email","error","newUser","id","Date","now","toString","createdAt","toISOString","setItem","stringify","btoa","success","login","credentials","storedUser","password","newToken","logout","removeItem","info","updateProfile","updatedData","currentUser","updatedUser","updatedAt","verifyToken","storedToken","decoded","atob","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/ecommerce-frontend_fixed/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('user')) || null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\r\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\r\n  const navigate = useNavigate();\r\n\r\n  const register = (userData) => {\r\n    try {\r\n      const existingUser = JSON.parse(localStorage.getItem('user'));\r\n      if (existingUser && existingUser.email === userData.email) {\r\n        toast.error('Email already registered');\r\n        return false;\r\n      }\r\n\r\n      const newUser = {\r\n        ...userData,\r\n        id: Date.now().toString(),\r\n        createdAt: new Date().toISOString()\r\n      };\r\n\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      localStorage.setItem('token', btoa(JSON.stringify({ id: newUser.id, email: newUser.email })));\r\n      setUser(newUser);\r\n      setIsLoggedIn(true);\r\n      setToken(localStorage.getItem('token'));\r\n      localStorage.setItem('isLoggedIn', 'true');\r\n      toast.success('Registration successful!');\r\n      navigate('/');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('Registration failed');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const login = (credentials) => {\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    if (\r\n      storedUser &&\r\n      storedUser.email === credentials.email &&\r\n      storedUser.password === credentials.password\r\n    ) {\r\n      setUser(storedUser);\r\n      setIsLoggedIn(true);\r\n      const newToken = btoa(JSON.stringify({ id: storedUser.id, email: storedUser.email }));\r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      localStorage.setItem('isLoggedIn', 'true');\r\n      toast.success('Logged in successfully!');\r\n      navigate('/');\r\n      return true;\r\n    } else {\r\n      toast.error('Invalid email or password');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsLoggedIn(false);\r\n    setToken(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('token');\r\n    toast.info('Logged out successfully');\r\n    navigate('/login');\r\n  };\r\n\r\n  const updateProfile = (updatedData) => {\r\n    try {\r\n      const currentUser = JSON.parse(localStorage.getItem('user'));\r\n      if (!currentUser) {\r\n        toast.error('No user found');\r\n        return false;\r\n      }\r\n\r\n      const updatedUser = {\r\n        ...currentUser,\r\n        ...updatedData,\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n      toast.success('Profile updated successfully');\r\n      return true;\r\n    } catch (error) {\r\n      toast.error('Profile update failed');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const verifyToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken && token) {\r\n      try {\r\n        const decoded = JSON.parse(atob(storedToken));\r\n        return !!decoded.id && !!decoded.email;\r\n      } catch {\r\n        return false;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedUser && storedToken && verifyToken()) {\r\n      setUser(JSON.parse(storedUser));\r\n      setIsLoggedIn(true);\r\n      setToken(storedToken);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n      setToken(null);\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      isLoggedIn, \r\n      token,\r\n      login, \r\n      logout, \r\n      register,\r\n      updateProfile,\r\n      verifyToken \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}