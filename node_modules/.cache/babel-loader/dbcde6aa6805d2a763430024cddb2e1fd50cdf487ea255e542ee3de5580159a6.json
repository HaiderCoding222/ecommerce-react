{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\ecommerce-frontend_fixed\\\\src\\\\context\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const itemExists = prevItems.find(item => item.id === product.id);\n      if (itemExists) {\n        toast.info(`${product.name} quantity updated in cart!`);\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        toast.success(`${product.name} added to cart!`);\n        return [...prevItems, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const updateQuantity = (id, quantity) => {\n    setCartItems(prev => prev.map(item => item.id === id ? {\n      ...item,\n      quantity: quantity > 0 ? quantity : 1\n    } : item));\n    toast.info('Cart updated!');\n  };\n  const removeFromCart = id => {\n    setCartItems(prev => prev.filter(item => item.id !== id));\n    toast.error('Item removed from cart!');\n  };\n  const clearCart = () => {\n    setCartItems([]);\n    toast.success('Cart cleared!');\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useContext","useState","toast","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","product","prevItems","itemExists","find","item","id","info","name","map","quantity","success","updateQuantity","prev","removeFromCart","filter","error","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/ecommerce-frontend_fixed/src/context/CartContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const addToCart = (product) => {\r\n    setCartItems((prevItems) => {\r\n      const itemExists = prevItems.find(item => item.id === product.id);\r\n      if (itemExists) {\r\n        toast.info(`${product.name} quantity updated in cart!`);\r\n        return prevItems.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        toast.success(`${product.name} added to cart!`);\r\n        return [...prevItems, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateQuantity = (id, quantity) => {\r\n    setCartItems(prev =>\r\n      prev.map(item =>\r\n        item.id === id ? { ...item, quantity: quantity > 0 ? quantity : 1 } : item\r\n      )\r\n    );\r\n    toast.info('Cart updated!');\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    setCartItems(prev => prev.filter(item => item.id !== id));\r\n    toast.error('Item removed from cart!');\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n    toast.success('Cart cleared!');\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, updateQuantity, clearCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => useContext(CartContext);"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,SAAS,GAAIC,OAAO,IAAK;IAC7BF,YAAY,CAAEG,SAAS,IAAK;MAC1B,MAAMC,UAAU,GAAGD,SAAS,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACjE,IAAIH,UAAU,EAAE;QACdZ,KAAK,CAACgB,IAAI,CAAC,GAAGN,OAAO,CAACO,IAAI,4BAA4B,CAAC;QACvD,OAAON,SAAS,CAACO,GAAG,CAACJ,IAAI,IACvBA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAClB;UAAE,GAAGD,IAAI;UAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAG;QAAE,CAAC,GACxCL,IACN,CAAC;MACH,CAAC,MAAM;QACLd,KAAK,CAACoB,OAAO,CAAC,GAAGV,OAAO,CAACO,IAAI,iBAAiB,CAAC;QAC/C,OAAO,CAAC,GAAGN,SAAS,EAAE;UAAE,GAAGD,OAAO;UAAES,QAAQ,EAAE;QAAE,CAAC,CAAC;MACpD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,cAAc,GAAGA,CAACN,EAAE,EAAEI,QAAQ,KAAK;IACvCX,YAAY,CAACc,IAAI,IACfA,IAAI,CAACJ,GAAG,CAACJ,IAAI,IACXA,IAAI,CAACC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGD,IAAI;MAAEK,QAAQ,EAAEA,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG;IAAE,CAAC,GAAGL,IACxE,CACF,CAAC;IACDd,KAAK,CAACgB,IAAI,CAAC,eAAe,CAAC;EAC7B,CAAC;EAED,MAAMO,cAAc,GAAIR,EAAE,IAAK;IAC7BP,YAAY,CAACc,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACV,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;IACzDf,KAAK,CAACyB,KAAK,CAAC,yBAAyB,CAAC;EACxC,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBlB,YAAY,CAAC,EAAE,CAAC;IAChBR,KAAK,CAACoB,OAAO,CAAC,eAAe,CAAC;EAChC,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAErB,SAAS;MAAEE,SAAS;MAAEc,cAAc;MAAEF,cAAc;MAAEK;IAAU,CAAE;IAAArB,QAAA,EAC9FA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,EAAA,CA5CWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AA8CzB,OAAO,MAAM8B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACK,WAAW,CAAC;AAAA;AAACgC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}